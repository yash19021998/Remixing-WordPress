/**
 * @remix-run/dev v1.4.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var execa = require('execa');

const jscodeshiftExecutable = require.resolve(".bin/jscodeshift");

const toFlags = (options = {}) => Object.entries(options).filter(([_key, value]) => Boolean(value)).map(([key, value]) => `--${key}${typeof value === "boolean" ? "" : `=${value}`}`);

const run = ({
  transformPath,
  files,
  flags: {
    debug,
    dry,
    print,
    runInBand
  },
  transformOptions
}) => {
  let args = [dry ? "--dry" : "", print ? "--print" : "", runInBand ? "--run-in-band" : "", "--fail-on-error", "--verbose=2", "--ignore-pattern=**/node_modules/**", "--ignore-pattern=**/.cache/**", "--ignore-pattern=**/build/**", "--extensions=tsx,ts,jsx,js", "--parser=tsx", ...["--transform", transformPath], ...files, ...toFlags(transformOptions || {})];

  if (debug) {
    console.log(`Executing command: jscodeshift ${args.filter(arg => arg !== "").join(" ")}`);
  }

  try {
    let result = execa.sync(jscodeshiftExecutable, args, {
      stdio: debug ? "inherit" : "ignore",
      stripFinalNewline: false
    });
    return result.exitCode === 0;
  } catch (error) {
    return false;
  }
};

exports.run = run;
